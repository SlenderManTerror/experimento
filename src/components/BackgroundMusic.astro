---
// src/components/BackgroundMusic.astro
export interface Props {
    src: string;
    volume?: number;
    fadeIn?: boolean;
    showControls?: boolean;
}

const { 
    src, 
    volume = 0.2, 
    fadeIn = true, 
    showControls = true
} = Astro.props;
---

<div class="background-music-container">
    <!-- Audio element -->
    <audio 
        id="background-music" 
        loop 
        preload="auto"
    >
        <source src={src} type="audio/mpeg">
        <source src={src.replace('.mp3', '.ogg')} type="audio/ogg">
    </audio>



    <!-- Controles de mÃºsica -->
    {showControls && (
        <div class="music-controls" id="music-controls">
            <button id="play-pause-btn" class="control-btn" title="Reproducir/Pausar">
                <svg class="play-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M8 5V19L19 12L8 5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                <svg class="pause-icon hidden" width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M6 4H10V20H6V4Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M14 4H18V20H14V4Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </button>
            
            <button id="mute-btn" class="control-btn" title="Silenciar/Activar">
                <svg class="volume-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M11 5L6 9H2V15H6L11 19V5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M19.07 4.93A10 10 0 0 1 22 12A10 10 0 0 1 19.07 19.07" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                <svg class="mute-icon hidden" width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M11 5L6 9H2V15H6L11 19V5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M23 9L17 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M17 9L23 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </button>
            
            <div class="volume-slider">
                <input 
                    type="range" 
                    id="volume-slider" 
                    min="0" 
                    max="1" 
                    step="0.1" 
                    value={volume}
                    class="slider"
                />
            </div>
        </div>
    )}
</div>

<style>
    .background-music-container {
        position: fixed;
        top: 0;
        left: 0;
        z-index: 9999;
        pointer-events: none;
    }



    .music-controls {
        position: fixed;
        bottom: 30px;
        right: 30px;
        display: flex;
        align-items: center;
        gap: 12px;
        background: var(--reproductor);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 50px;
        padding: 12px 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        pointer-events: all;
        transition: all 0.3s ease;
        transform: translateY(100px);
        opacity: 0;
    }

    .music-controls.show {
        transform: translateY(0);
        opacity: 1;
    }

    .control-btn {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        width: 40px;
        height: 40px;
    }

    .control-btn:hover {
        background: rgba(255, 255, 255, 0.1);
        transform: scale(1.1);
    }

    .control-btn:active {
        transform: scale(0.95);
    }

    .hidden {
        display: none !important;
    }

    .volume-slider {
        display: flex;
        align-items: center;
        margin-left: 8px;
    }

    .slider {
        width: 80px;
        height: 4px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 2px;
        outline: none;
        cursor: pointer;
        transition: background 0.2s ease;
    }

    .slider:hover {
        background: rgba(255, 255, 255, 0.3);
    }

    .slider::-webkit-slider-thumb {
        appearance: none;
        width: 16px;
        height: 16px;
        background: #3b82f6;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .slider::-webkit-slider-thumb:hover {
        background: #2563eb;
        transform: scale(1.2);
    }

    .slider::-moz-range-thumb {
        width: 16px;
        height: 16px;
        background: var(--textotabla);
        border-radius: 50%;
        cursor: pointer;
        border: none;
        transition: all 0.2s ease;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .music-controls {
            bottom: 20px;
            right: 20px;
            padding: 10px 16px;
            gap: 8px;
        }

        .control-btn {
            width: 36px;
            height: 36px;
            padding: 6px;
        }

        .slider {
            width: 60px;
        }
    }
</style>

<script>
    console.log('ðŸŽµ BackgroundMusic component loaded');
    
    document.addEventListener('DOMContentLoaded', () => {
        console.log('ðŸŽµ BackgroundMusic component loaded');
        
        // Ocultar el audio del componente - el global lo maneja
        const audio = document.getElementById('background-music');
        if (audio) {
            audio.style.display = 'none';
            console.log('ðŸŽµ Component audio hidden, using global system');
        }
        
        // Los controles y funcionalidad estÃ¡n manejados por el script global en el layout
        console.log('ðŸŽµ Component ready - global system will handle everything');
    });
</script>