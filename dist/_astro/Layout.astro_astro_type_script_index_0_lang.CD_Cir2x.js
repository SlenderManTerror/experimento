console.log("🎵 Loading global music system");if(!window.globalAudio){console.log("🎵 Creating new global audio with format detection");const o=document.createElement("audio"),i={mp3:o.canPlayType("audio/mpeg"),ogg:o.canPlayType("audio/ogg"),wav:o.canPlayType("audio/wav"),m4a:o.canPlayType("audio/mp4")};console.log("🎵 Browser audio support:",i);const d=[{src:"/audio/495747__clacksberg__minimal-ambient-musicatmosphere-fragment.mp3",type:"mp3"},{src:"/audio/pelee-theme.mp3",type:"mp3"},{src:"/audio/pelee-theme.ogg",type:"ogg"},{src:"/audio/pelee-theme.wav",type:"wav"},{src:"/audio/pelee-theme.m4a",type:"m4a"}];let l=null;for(const s of d)if(i[s.type]&&i[s.type]!==""){l=s,console.log("🎵 Selected format:",s.type,"- Support level:",i[s.type]);break}l||(console.error("❌ No supported audio format found"),l=d[0]),window.globalAudio=new Audio(l.src),window.globalAudio.loop=!0,window.globalAudio.volume=.2,window.globalAudio.preload="auto",window.globalAudio.addEventListener("loadstart",()=>console.log("🎵 Audio loading started")),window.globalAudio.addEventListener("canplay",()=>console.log("🎵 Audio can start playing")),window.globalAudio.addEventListener("canplaythrough",()=>console.log("🎵 Audio can play through")),window.globalAudio.addEventListener("error",s=>{if(console.error("❌ Audio error details:",{error:s,audioError:window.globalAudio.error,networkState:window.globalAudio.networkState,readyState:window.globalAudio.readyState,src:window.globalAudio.src}),window.globalAudio.error){const a=window.globalAudio.error.code;console.error("❌ Error code:",a,"-",{1:"MEDIA_ERR_ABORTED - The user aborted the audio",2:"MEDIA_ERR_NETWORK - Network error while loading audio",3:"MEDIA_ERR_DECODE - Error decoding audio file",4:"MEDIA_ERR_SRC_NOT_SUPPORTED - Audio format not supported"}[a]||"Unknown error"),a===4&&(console.log("🎵 Attempting auto-fallback to MP3..."),window.globalAudio.src="/audio/pelee-theme.mp3")}}),window.globalAudio.addEventListener("play",()=>console.log("▶️ Audio started playing")),window.globalAudio.addEventListener("pause",()=>console.log("⏸️ Audio paused"))}window.musicInitialized=window.musicInitialized||!1;window.startGlobalMusic=async function(){try{return console.log("🎵 Starting global music..."),await window.globalAudio.play(),window.musicInitialized=!0,sessionStorage.setItem("musicActive","true"),sessionStorage.setItem("musicInitialized","true"),sessionStorage.setItem("musicTime",window.globalAudio.currentTime.toString()),console.log("✅ Global music started and state saved"),!0}catch(o){return console.log("❌ Could not start music:",o),!1}};window.syncMusicControls=function(){const o=document.querySelector(".play-icon"),i=document.querySelector(".pause-icon"),d=document.querySelector(".volume-icon"),l=document.querySelector(".mute-icon"),s=document.getElementById("volume-slider"),a=document.getElementById("music-controls");a&&a.classList.add("show"),window.globalAudio&&(window.globalAudio.paused?(o?.classList.remove("hidden"),i?.classList.add("hidden")):(o?.classList.add("hidden"),i?.classList.remove("hidden")),window.globalAudio.muted?(d?.classList.add("hidden"),l?.classList.remove("hidden")):(d?.classList.remove("hidden"),l?.classList.add("hidden")),s&&(s.value=window.globalAudio.volume))};document.addEventListener("DOMContentLoaded",()=>{console.log("🎵 Setting up page controls"),setTimeout(()=>{window.syncMusicControls();const o=sessionStorage.getItem("musicActive")==="true",i=sessionStorage.getItem("musicInitialized")==="true",d=parseFloat(sessionStorage.getItem("musicTime")||"0"),l=parseFloat(sessionStorage.getItem("musicVolume")||"0.2"),s=sessionStorage.getItem("musicMuted")==="true";o&&i&&window.globalAudio&&(console.log("🎵 Restoring complete music state..."),window.musicInitialized=!0,window.globalAudio.currentTime=d,window.globalAudio.volume=l,window.globalAudio.muted=s,window.globalAudio.play().then(()=>{console.log("🎵 Music auto-resumed successfully"),window.syncMusicControls()}).catch(e=>{console.log("⚠️ Auto-resume blocked, will resume on next user interaction"),console.log("🎵 Music is ready to resume when user interacts"),window.syncMusicControls()}));const a=document.getElementById("play-pause-btn"),u=document.getElementById("mute-btn"),r=document.getElementById("volume-slider");a?.addEventListener("click",async()=>{if(!window.musicInitialized){await window.startGlobalMusic(),window.syncMusicControls();return}window.globalAudio.paused?await window.globalAudio.play():window.globalAudio.pause(),window.syncMusicControls()}),u?.addEventListener("click",async()=>{if(!window.musicInitialized){await window.startGlobalMusic(),window.syncMusicControls();return}window.globalAudio.muted=!window.globalAudio.muted,window.syncMusicControls()}),r?.addEventListener("input",e=>{window.globalAudio&&(window.globalAudio.volume=parseFloat(e.target.value))}),(()=>{const e=async t=>{if(sessionStorage.getItem("musicActive")==="true"&&window.globalAudio?.paused){console.log("🎵 User interaction detected, resuming music...");try{window.musicInitialized=!0,await window.globalAudio.play(),window.syncMusicControls(),console.log("✅ Music resumed after user interaction"),document.removeEventListener("click",e,!0),document.removeEventListener("touchstart",e,!0),document.removeEventListener("keydown",e,!0)}catch(n){console.log("❌ Still could not resume:",n)}}window.musicInitialized||(console.log("🎵 Initializing music with user interaction..."),await window.startGlobalMusic()&&(window.syncMusicControls(),console.log("🎵 Music initialized successfully")))};document.addEventListener("click",e,{capture:!0}),document.addEventListener("touchstart",e,{capture:!0}),document.addEventListener("keydown",e,{capture:!0}),console.log("🎵 Auto-resume set up for user interactions")})(),setTimeout(()=>{sessionStorage.getItem("musicActive")==="true"&&window.globalAudio?.paused&&(console.log("🎵 Music is paused but ready to resume on interaction"),window.musicInitialized=!0,window.syncMusicControls())},1e3),window.testMusic=async function(){console.log("🔧 Manual music test..."),console.log("🔧 Current audio state:",{src:window.globalAudio?.src,readyState:window.globalAudio?.readyState,paused:window.globalAudio?.paused,volume:window.globalAudio?.volume,error:window.globalAudio?.error});const e=await window.startGlobalMusic();return console.log("🔧 Test result:",e),e},window.testAudioFile=function(e){console.log("🔧 Testing audio file:",e);const t=new Audio(e);return t.addEventListener("canplay",()=>{console.log("✅ File can be played:",e),t.remove()}),t.addEventListener("error",n=>{console.error("❌ File error:",e,t.error),t.remove()}),t},window.checkFiles=async function(){const e=["/audio/691725__lightmister__ambient-music.mp3","/audio/pelee-theme.mp3","/audio/pelee-theme.ogg","/audio/pelee-theme.wav"];console.log("🔧 Checking audio files...");for(const t of e)try{const n=await fetch(t,{method:"HEAD"});if(console.log(`${n.ok?"✅":"❌"} ${t} - Status: ${n.status}`),n.ok){const c=n.headers.get("content-length"),w=n.headers.get("content-type");console.log(`   Size: ${c?(Number(c)/1024).toFixed(1)+"KB":"unknown"}, Type: ${w||"unknown"}`)}}catch(n){console.log(`❌ ${t} - Error: ${n.message}`)}},window.testDirectMP3=function(){console.log("🔧 Testing your MP3 directly...");const e=new Audio("/audio/691725__lightmister__ambient-music.mp3");return e.addEventListener("loadstart",()=>console.log("🔧 Your MP3 loading started")),e.addEventListener("canplay",()=>{console.log("✅ Your MP3 can play!"),e.play().then(()=>{console.log("✅ Your MP3 playing successfully!"),setTimeout(()=>{e.pause(),console.log("🔧 MP3 test completed")},2e3)}).catch(t=>console.log("❌ MP3 play failed:",t))}),e.addEventListener("error",t=>{console.error("❌ Your MP3 test error:",e.error)}),e.load(),e},setTimeout(()=>{console.log("🔧 Running automatic file check..."),window.checkFiles()},1e3),window.forceResumeMusic=function(){console.log("🔧 Force resume check..."),console.log("State:",{initialized:window.musicInitialized,paused:window.globalAudio?.paused,currentTime:window.globalAudio?.currentTime,sessionActive:sessionStorage.getItem("musicActive")}),window.globalAudio&&sessionStorage.getItem("musicActive")==="true"?(window.musicInitialized=!0,window.globalAudio.play().then(()=>{console.log("✅ Force resume successful"),window.syncMusicControls()}).catch(e=>{console.log("❌ Force resume failed (normal if no recent user interaction):",e.name),console.log("💡 Try clicking anywhere on the page first, then run forceResumeMusic() again")})):console.log("⚠️ No music to resume or not active")},console.log("🔧 Debug commands:"),console.log("  - forceResumeMusic() - Force music to resume"),console.log("  - testDirectMP3() - Test MP3 directly")},document.body.classList.contains("splash-active")?1e3:300)});window.addEventListener("beforeunload",()=>{window.globalAudio&&window.musicInitialized&&(sessionStorage.setItem("musicActive","true"),sessionStorage.setItem("musicInitialized","true"),sessionStorage.setItem("musicTime",window.globalAudio.currentTime.toString()),sessionStorage.setItem("musicVolume",window.globalAudio.volume.toString()),sessionStorage.setItem("musicMuted",window.globalAudio.muted.toString()),console.log("🎵 Complete music state saved before navigation"))});document.addEventListener("click",o=>{const i=o.target.closest?o.target.closest("a"):null;i&&i.href&&i.href.startsWith(window.location.origin)&&window.globalAudio&&window.musicInitialized&&(sessionStorage.setItem("musicActive","true"),sessionStorage.setItem("musicInitialized","true"),sessionStorage.setItem("musicTime",window.globalAudio.currentTime.toString()),console.log("🎵 Music state saved for navigation"))},!0);
